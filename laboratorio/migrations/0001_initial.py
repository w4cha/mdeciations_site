# Generated by Django 5.1.1 on 2024-10-11 15:29

import datetime
import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Laboratorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre del laboratorio')),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Upper('nombre'), name='unique laboratorio upper', violation_error_message='El nombre del laboratorio ya existe')],
            },
        ),
        migrations.CreateModel(
            name='DirectorGeneral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, verbose_name='Director del laboratorio')),
                ('laboratorio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='laboratorio', to='laboratorio.laboratorio')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre del producto')),
                ('fecha_fabricación', models.DateField(validators=[django.core.validators.MaxValueValidator(datetime.date.today, message='fecha debe ser antes que %(limit_value)s'), django.core.validators.MinValueValidator(datetime.date(2015, 1, 1), message='fecha debe ser después de %(limit_value)s')], verbose_name='Fecha de fabricación')),
                ('costo_producto', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.0, message='el valor debe ser un número positivo')], verbose_name='Costo fabricación')),
                ('venta_producto', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.0, message='el valor debe ser un número positivo')], verbose_name='Precio de venta')),
                ('laboratorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratorios', to='laboratorio.laboratorio')),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Upper('nombre'), name='unique Producto upper', violation_error_message='El nombre del producto ya existe')],
            },
        ),
    ]
